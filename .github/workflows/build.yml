name: Build LOUDBOT
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: create a github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: LOUDCRAB ${{ github.ref }}
          draft: false
          prerelease: false

  linux:
    name: linux musl build
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --release --target x86_64-unknown-linux-musl

      - name: tar it up
        run:
          tar cf LOUDBOT_x64_linux.tar -C target/x86_64-unknown-linux-musl/release LOUDBOT PRUNE SEED && tar f LOUDBOT_x64_linux.tar -r SEEDS && gzip LOUDBOT_x64_linux.tar
      - name: upload x64 linux musl release
        id: release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.release.outputs.upload_url}}
          asset_path: ./LOUDBOT_x64_linux.tar.gz
          asset_name: LOUDBOT_x64_linux.tar.gz
          asset_content_type: application/octet-stream

  macos:
    name: macos both flavors
    runs-on: macos-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - run: cargo build --release
      - name: the tar thing
        run:
          tar cf LOUDBOT_x64_darwin.tar -C target/release LOUDBOT PRUNE SEED && tar f LOUDBOT_x64_darwin.tar -r SEEDS && gzip LOUDBOT_x64_darwin.tar
      - name: upload darwin intel release
        id: intel-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.release.outputs.upload_url}}
          asset_path: ./LOUDBOT_x64_darwin.tar.gz
          asset_name: LOUDBOT_x64_darwin.tar.gz
          asset_content_type: application/octet-stream

      - run: rustup target install aarch64-apple-darwin
      - run: cargo build --target aarch64-apple-darwin --release
      - name: the tar thing
        run:
          tar cf LOUDBOT_aarch64_darwin.tar -C target/release LOUDBOT PRUNE SEED && tar f LOUDBOT_aarch64_darwin.tar -r SEEDS && gzip LOUDBOT_aarch64_darwin.tar
      - name: upload darwin m1 release
        id: m1-release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{needs.release.outputs.upload_url}}
          asset_path: ./LOUDBOT_aarch64_darwin.tar.gz
          asset_name: LOUDBOT_aarch64_darwin.tar.gz
          asset_content_type: application/octet-stream
